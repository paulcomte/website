<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Paul Comte - communication</title>
    <subtitle>Paul Comte a backend software engineer, Rust, Java and C</subtitle>
    <link rel="self" type="application/atom+xml" href="https://paulcomte.cafe/tags/communication/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://paulcomte.cafe"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-03-24T00:00:00+00:00</updated>
    <id>https://paulcomte.cafe/tags/communication/atom.xml</id>
    <entry xml:lang="en">
        <title>ðŸ“¡ A protocol system in C++</title>
        <published>2023-03-24T00:00:00+00:00</published>
        <updated>2023-03-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://paulcomte.cafe/blog/a-protocol-system/"/>
        <id>https://paulcomte.cafe/blog/a-protocol-system/</id>
        
        <content type="html" xml:base="https://paulcomte.cafe/blog/a-protocol-system/">&lt;h2 id=&quot;repository&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulcomte&#x2F;babel&#x2F;tree&#x2F;main&#x2F;protocol&quot;&gt;Repository&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;&#x2F;h2&gt;
&lt;p&gt;During the realization of the &lt;code&gt;Babel&lt;&#x2F;code&gt; project, I had to work on a protocol system, to enable interactions between the client and the server.&lt;&#x2F;p&gt;
&lt;p&gt;If you want more details about the base project, feel free to click &lt;a href=&quot;&#x2F;projects&#x2F;babel&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tech-stack&quot;&gt;Tech stack&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Programming language: C++&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The protocol system does not depend on anything else.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;architecture&quot;&gt;Architecture&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;packetmanager&quot;&gt;PacketManager&lt;&#x2F;h3&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;global-functions&quot;&gt;Global functions&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;deserialize-std-string-packet&quot;&gt;deserialize(std::string &amp;amp;packet)&lt;&#x2F;h5&gt;
&lt;pre&gt;&lt;code&gt;1. message[0] == &amp;#x27;0x32&amp;#x27;?
   We check if the first byte is our magic value.

2. PacketType = message[1]
   We retrieve the packet type from the next byte.

3. PacketField[] = message[2..]
   We convert the rest of the content into a list of packet field.

4. Packet = Deserialize(PacketType, PacketField[])
   We call the deserialize function for the specific packet type, with the list of packet fields.
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;h5 id=&quot;serialize-packet&quot;&gt;serialize(Packet&amp;amp;)&lt;&#x2F;h5&gt;
&lt;blockquote&gt;
&lt;p&gt;It will simply call the &lt;code&gt;serialize&lt;&#x2F;code&gt; inherited function from the Packet class.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;h4 id=&quot;handlepacket-packet-packet&quot;&gt;handlePacket(Packet &amp;amp;packet)&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;server-side-implementation&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulcomte&#x2F;babel&#x2F;blob&#x2F;main&#x2F;protocol&#x2F;server&#x2F;ServerPacketManager.cpp&quot;&gt;Server-side implementation&lt;&#x2F;a&gt;&lt;&#x2F;h5&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;h5 id=&quot;client-side-implementation&quot;&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulcomte&#x2F;babel&#x2F;blob&#x2F;main&#x2F;protocol&#x2F;client&#x2F;ClientPacketManager.cpp&quot;&gt;Client-side implementation&lt;&#x2F;a&gt;&lt;&#x2F;h5&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A trivial implementation of the &lt;code&gt;handlePacket&lt;&#x2F;code&gt; function is to simply loop through all &lt;code&gt;PacketHandler&lt;&#x2F;code&gt;s, to target the one registered for the received packet.&lt;&#x2F;p&gt;
&lt;p&gt;You can also use a &lt;code&gt;HashMap&amp;lt;PacketType, PacketHandler&amp;gt;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;packethandler&quot;&gt;PacketHandler&lt;&#x2F;h3&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;serverpackethandler&quot;&gt;ServerPacketHandler&lt;&#x2F;h4&gt;
&lt;pre&gt;&lt;code&gt;handle(Packet&amp;amp;, std::shared_ptr&amp;lt;ServerManager&amp;gt;, IoClient*)
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;h4 id=&quot;clientpackethandler&quot;&gt;ClientPacketHandler&lt;&#x2F;h4&gt;
&lt;pre&gt;&lt;code&gt;handle(Packet&amp;amp;, std::shared_ptr&amp;lt;ClientManager&amp;gt;)
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;fields&quot;&gt;Fields&lt;&#x2F;h3&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;Hereâ€™s the base structure of a field&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;field_type&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;field&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;size&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;remaining bytes&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;value&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;character-field&quot;&gt;Character field&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;field_type&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;value&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;size&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;value&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;integer-field-4-bytes&quot;&gt;Integer field (4 bytes)&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;field_type&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[0]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[1]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[2]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[3]&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;size&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;value&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x01&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;unsigned-integer-field-4-bytes&quot;&gt;Unsigned Integer field (4 bytes)&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;field_type&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[0]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[1]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[2]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[3]&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;size&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;value&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x02&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;unsigned-integer-64-field-8-bytes&quot;&gt;Unsigned Integer 64 field (8 bytes)&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;field_type&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[0]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[1]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[2]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[3]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[4]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[5]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[6]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[7]&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;size&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;value&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x03&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; OxFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;string-field&quot;&gt;String field&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;field_type&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;size[0]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;size[1]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;size[2]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;size[3]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[0]&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;[n]&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;size&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;n-1 bytes&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;value&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x04&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;packets&quot;&gt;Packets&lt;&#x2F;h3&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;u&gt;&lt;strong&gt;Hereâ€™s the base structure of a packet:&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;magic&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;packet_type&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;fields[]&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;size&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;1 byte&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;remaining bytes&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;value&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x32&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;0x00 =&amp;gt; 0xFF&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;calluppacket&quot;&gt;CallUpPacket&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;username&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;hostname&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;port&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;field_type&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;string&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;string&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;uint&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;hanguppacket&quot;&gt;HangUpPacket&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;username&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;field_type&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;string&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;contactpacket&quot;&gt;ContactPacket&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;username&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;field_type&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;string&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;loginerrorpacket&quot;&gt;LoginErrorPacket&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;error&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;field_type&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;string&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;loginpacket&quot;&gt;LoginPacket&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;username&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;field_type&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;string&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;logoutpacket&quot;&gt;LogoutPacket&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;empty&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;field_type&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;empty&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;messagepacket&quot;&gt;MessagePacket&lt;&#x2F;h4&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;description&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;sender&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;recipient&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;content&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;timestamp&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td style=&quot;text-align: center&quot;&gt;&lt;u&gt;&lt;strong&gt;field_type&lt;&#x2F;strong&gt;&lt;&#x2F;u&gt;&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;string&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;string&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;string&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;uint64&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;sample-implementation&quot;&gt;Sample implementation&lt;&#x2F;h2&gt;
&lt;p&gt;You can check out the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulcomte&#x2F;babel&#x2F;wiki&quot;&gt;GitHub wiki&lt;&#x2F;a&gt; to have more details on an example implementation.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;future&quot;&gt;Future ?&lt;&#x2F;h2&gt;
&lt;p&gt;If I ever get the time to work on my protocol system, I would definitely write a file parser to create packets from simple json files.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
